services:
  bot:
    build:
      context: .
      target: development
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      - db
    environment:
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
      ./scripts/wait_for_postgres.sh &&
      /app/.venv/bin/alembic upgrade head &&
      /app/.venv/bin/python -m watchfiles '/app/.venv/bin/python -m app.presentation.telegram' app/
      "

  webapp:
    build:
      context: ./webapp
      target: development
    ports:
      - "${WEBAPP_PORT:-3000}:80"
    volumes:
      - ./webapp:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm run dev -- --host 0.0.0.0 --port 80"

  db:
    image: postgres:17.6
    restart: always
    shm_size: 128mb
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - moderator-bot-db:/var/lib/postgresql/data

  adminer:
    image: adminer:5.3.0
    restart: always
    env_file:
      - .env
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    depends_on:
      - db

volumes:
  moderator-bot-db:
