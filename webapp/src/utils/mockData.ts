import type { Chat, BulkActionConfig, BulkExecutionResult } from '../types'

// Mock chat data
export const mockChatsData: Chat[] = [
  {
    id: 1,
    title: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –ß–µ—Ö–∏–∏',
    type: 'supergroup',
    member_count: 15420,
    description: '–ß–∞—Ç –¥–ª—è IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ –ß–µ—à—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤! üöÄ',
    auto_delete_welcome_delay: 300,
    is_active: true,
    created_at: '2023-01-15T10:00:00Z',
    updated_at: '2024-12-19T14:30:00Z'
  },
  {
    id: 2,
    title: '–ò–∑—É—á–∞–µ–º —á–µ—à—Å–∫–∏–π —è–∑—ã–∫',
    type: 'group',
    member_count: 8750,
    description: '–ò–∑—É—á–µ–Ω–∏–µ —á–µ—à—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏—Ö',
    welcome_message: 'Dobr√Ω den! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —è–∑—ã–∫–æ–≤—É—é –≥—Ä—É–ø–ø—É! üá®üáø',
    is_active: true,
    created_at: '2023-03-20T15:20:00Z',
    updated_at: '2024-12-18T09:15:00Z'
  },
  {
    id: 3,
    title: '–†–∞–±–æ—Ç–∞ –≤ –ü—Ä–∞–≥–µ',
    type: 'supergroup',
    member_count: 23100,
    description: '–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã –∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –ü—Ä–∞–≥–µ',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Ä–∞–±–æ—Ç—É —Å–≤–æ–µ–π –º–µ—á—Ç—ã –≤ –ü—Ä–∞–≥–µ üíº',
    auto_delete_welcome_delay: 600,
    is_active: true,
    created_at: '2023-02-10T12:45:00Z',
    updated_at: '2024-12-19T16:00:00Z'
  },
  {
    id: 4,
    title: '–°—Ç—É–¥–µ–Ω—Ç—ã –≤ –ß–µ—Ö–∏–∏',
    type: 'group',
    member_count: 5640,
    description: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤',
    welcome_message: '–ü—Ä–∏–≤–µ—Ç, —Å—Ç—É–¥–µ–Ω—Ç! üéì –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –≤—Å—é –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!',
    is_active: false,
    created_at: '2023-05-12T08:30:00Z',
    updated_at: '2024-11-20T11:45:00Z'
  },
  {
    id: 5,
    title: '–ù–æ–≤–æ—Å—Ç–∏ IT –ß–µ—Ö–∏—è',
    type: 'channel',
    member_count: 12890,
    description: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ IT-—Å—Ñ–µ—Ä—ã –≤ –ß–µ—à—Å–∫–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–µ',
    is_active: true,
    created_at: '2023-04-01T14:20:00Z',
    updated_at: '2024-12-19T10:30:00Z'
  },
  {
    id: 6,
    title: '–ü–æ–∏—Å–∫ –∂–∏–ª—å—è –ü—Ä–∞–≥–∞',
    type: 'supergroup',
    member_count: 18500,
    description: '–ü–æ–∏—Å–∫ –∏ —Å–¥–∞—á–∞ –∂–∏–ª—å—è –≤ –ü—Ä–∞–≥–µ –∏ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç—è—Ö',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è! üè†',
    auto_delete_welcome_delay: 480,
    is_active: true,
    created_at: '2023-01-25T16:10:00Z',
    updated_at: '2024-12-19T12:20:00Z'
  },
  {
    id: 7,
    title: '–ê–≤—Ç–æ –≤ –ß–µ—Ö–∏–∏',
    type: 'group',
    member_count: 4200,
    description: '–ü–æ–∫—É–ø–∫–∞, –ø—Ä–æ–¥–∞–∂–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ! üöó',
    is_active: true,
    created_at: '2023-06-15T11:00:00Z',
    updated_at: '2024-12-17T14:45:00Z'
  },
  {
    id: 8,
    title: '–ú–µ–¥–∏—Ü–∏–Ω–∞ –≤ –ß–µ—Ö–∏–∏',
    type: 'group',
    member_count: 3100,
    description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–µ–≤',
    welcome_message: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã üè•',
    is_active: false,
    created_at: '2023-07-08T13:30:00Z',
    updated_at: '2024-10-12T09:20:00Z'
  },
  {
    id: 9,
    title: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –ß–µ—Ö–∏–∏',
    type: 'supergroup',
    member_count: 9800,
    description: '–¢—É—Ä–∏–∑–º, –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤! üó∫Ô∏è',
    auto_delete_welcome_delay: 300,
    is_active: true,
    created_at: '2023-08-22T17:15:00Z',
    updated_at: '2024-12-18T15:30:00Z'
  },
  {
    id: 10,
    title: '–ë–∏–∑–Ω–µ—Å –≤ –ß–µ—Ö–∏–∏',
    type: 'group',
    member_count: 6700,
    description: '–û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –≤–µ–¥–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ –≤ –ß–†',
    welcome_message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ! üíº',
    is_active: true,
    created_at: '2023-09-10T10:45:00Z',
    updated_at: '2024-12-19T11:10:00Z'
  }
]

// Mock API functions
export const mockChats = async (): Promise<Chat[]> => {
  // Simulate API delay
  await new Promise(resolve => setTimeout(resolve, 800))
  return mockChatsData
}

export const mockBulkUpdate = async (
  chatIds: number[],
  config: BulkActionConfig
): Promise<BulkExecutionResult> => {
  // Simulate API processing time
  await new Promise(resolve => setTimeout(resolve, 2000))

  // Simulate some failures (10% failure rate)
  const results = chatIds.map(chatId => {
    const chat = mockChatsData.find(c => c.id === chatId)
    const success = Math.random() > 0.1 // 90% success rate

    return {
      chatId,
      chatTitle: chat?.title || `Chat ${chatId}`,
      success,
      error: success ? undefined : '–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ API Telegram',
      changes: success ? config.values : undefined
    }
  })

  const successCount = results.filter(r => r.success).length
  const failureCount = results.length - successCount

  return {
    success: failureCount === 0,
    totalChats: chatIds.length,
    successCount,
    failureCount,
    results
  }
}

// Export mock stats for future analytics
export const mockChatStats = {
  totalChats: mockChatsData.length,
  activeChats: mockChatsData.filter(c => c.is_active).length,
  totalMembers: mockChatsData.reduce((sum, chat) => sum + (chat.member_count || 0), 0),
  averageMembers: Math.round(
    mockChatsData.reduce((sum, chat) => sum + (chat.member_count || 0), 0) / mockChatsData.length
  ),
  chatsByType: mockChatsData.reduce((acc, chat) => {
    acc[chat.type] = (acc[chat.type] || 0) + 1
    return acc
  }, {} as Record<string, number>)
}
